const ifcTypes = {
  //Building elements
  IfcBuildingElementProxy: "IFCBUILDINGELEMENTPROXY",
  IfcBeam: "IFCBEAM",
  IfcColumn: "IFCCOLUMN",
  IfcCovering: "IFCCOVERING",
  IfcCurtainWall: "IFCCURTAINWALL",
  IfcDoor: "IFCDOOR",
  IfcElementAssembly: "IFCELEMENTASSEMBLY",
  IfcEquipmentElement: "IFCEQUIPMENTELEMENT",
  IfcFastener: "IFCFASTENER",
  IfcFlowTerminal: "IFCFLOWTERMINAL",
  IfcFlowSegment: "IFCFLOWSEGMENT",
  IfcFooting: "IFCFOOTING",
  IfcFurnishingElement: "IFCFURNISHINGELEMENT",
  IfcMappedItem: "IFCMAPPEDITEM",
  IfcMechanicalFastener: "IFCMECHANICALFASTENER",
  IfcMember: "IFCMEMBER",
  IfcPlate: "IFCPLATE",
  IfcRailing: "IFCRAILING",
  IfcRamp: "IFCRAMP",
  IfcReinforcingBar: "IFCREINFORCINGBAR",
  IfcReinforcingMesh: "IFCREINFORCINGMESH",
  IfcSlab: "IFCSLAB",
  IfcOpeningElement: "IFCOPENINGELEMENT",
  IfcRoof: "IFCROOF",
  IfcStairFlight: "IFCSTAIRFLIGHT",
  IfcStair: "IFCSTAIR",
  IfcWallStandardCase: "IFCWALLSTANDARDCASE",
  IfcWall: "IFCWALL",
  IfcWindow: "IFCWINDOW",
  //Classification
  IfcClassification: "IFCCLASSIFICATION",
  IfcClassificationReference: "IFCCLASSIFICATIONREFERENCE",
  //Contexts
  IfcGeometricRepresentationContext: "IFCGEOMETRICREPRESENTATIONCONTEXT",
  IfcGeometricRepresentationSubContext: "IFCGEOMETRICREPRESENTATIONSUBCONTEXT",
  IfcGridPlacement: "IFCGRIDPLACEMENT",
  IfcLinearPlacement: "IFCLINEARPLACEMENT",
  IfcLocalPlacement: "IFCLOCALPLACEMENT",
  //Document
  IfcDocumentReference: "IFCDOCUMENTREFERENCE",
  //Geometry
  IfcArbitraryClosedProfileDef: "IFCARBITRARYCLOSEDPROFILEDEF",
  IfcArbitraryProfileDefWithVoids: "IFCARBITRARYPROFILEDEFWITHVOIDS",
  IfcAxis2Placement2D: "IFCAXIS2PLACEMENT2D",
  IfcAxis2Placement3D: "IFCAXIS2PLACEMENT3D",
  IfcBooleanClippingResult: "IFCBOOLEANCLIPPINGRESULT",
  IfcBoundingBox: "IFCBOUNDINGBOX",
  IfcCartesianPoint: "IFCCARTESIANPOINT",
  IfcCartesianTransformationOperator3D: "IFCCARTESIANTRANSFORMATIONOPERATOR3D",
  IfcCircle: "IFCCIRCLE",
  IfcCircleHollowProfileDef: "IFCCIRCLEHOLLOWPROFILEDEF",
  IfcClosedShell: "IFCCLOSEDSHELL",
  IfcCircleProfileDef: "IFCCIRCLEPROFILEDEF",
  IfcCompositeCurve: "IFCCOMPOSITECURVE",
  IfcCompositeCurveSegment: "IFCCOMPOSITECURVESEGMENT",
  IfcConnectedFaceSet: "IFCCONNECTEDFACESET",
  IfcConnectionSurfaceGeometry: "IFCCONNECTIONSURFACEGEOMETRY",
  IfcCurveBoundedPlane: "IFCCURVEBOUNDEDPLANE",
  IfcDirection: "IFCDIRECTION",
  IfcEllipse: "IFCELLIPSE",
  IfcExtrudedAreaSolid: "IFCEXTRUDEDAREASOLID",
  IfcFaceBound: "IFCFACEBOUND",
  IfcFace: "IFCFACE",
  IfcFaceBasedSurfaceModel: "IFCFACEBASEDSURFACEMODEL",
  IfcFaceOuterBound: "IFCFACEOUTERBOUND",
  IfcFacetedBrep: "IFCFACETEDBREP",
  IfcGeometricCurveSet: "IFCGEOMETRICCURVESET",
  IfcGeometricSet: "IFCGEOMETRICSET",
  IfcHalfSpaceSolid: "IFCHALFSPACESOLID",
  IfcIShapeProfileDef: "IFCISHAPEPROFILEDEF",
  IfcLine: "IFCLINE",
  IfcLShapeProfileDef: "IFCLSHAPEPROFILEDEF",
  IfcPlanarExtent: "IFCPLANAREXTENT",
  IfcPlane: "IFCPLANE",
  IfcPolygonalBoundedHalfSpace: "IFCPOLYGONALBOUNDEDHALFSPACE",
  IfcPolyline: "IFCPOLYLINE",
  IfcPolyLoop: "IFCPOLYLOOP",
  IfcProductDefinitionShape: "IFCPRODUCTDEFINITIONSHAPE",
  IfcRectangleHollowProfileDef: "IFCRECTANGLEHOLLOWPROFILEDEF",
  IfcRectangleProfileDef: "IFCRECTANGLEPROFILEDEF",
  IfcShapeRepresentation: "IFCSHAPEREPRESENTATION",
  IfcSweptDiskSolid: "IFCSWEPTDISKSOLID",
  IfcTrimmedCurve: "IFCTRIMMEDCURVE",
  IfcArbitraryOpenProfileDef: "IFCARBITRARYOPENPROFILEDEF",
  IfcSurfaceOfLinearExtrusion: "IFCSURFACEOFLINEAREXTRUSION",
  IfcVector: "IFCVECTOR",
  //Identities
  IfcApplication: "IFCAPPLICATION",
  IfcOrganization: "IFCORGANIZATION",
  IfcOwnerHistory: "IFCOWNERHISTORY",
  IfcPerson: "IFCPERSON",
  IfcPersonAndOrganization: "IFCPERSONANDORGANIZATION",
  IfcPostalAddress: "IFCPOSTALADDRESS",
  //Materials
  IfcMaterial: "IFCMATERIAL",
  IfcMaterialLayer: "IFCMATERIALLAYER",
  IfcMaterialLayerSet: "IFCMATERIALLAYERSET",
  IfcMaterialLayerSetUsage: "IFCMATERIALLAYERSETUSAGE",
  IfcMaterialList: "IFCMATERIALLIST",
  //Presentation
  IfcAnnotation: "IFCANNOTATION",
  IfcAnnotationFillArea: "IFCANNOTATIONFILLAREA",
  IfcColourRgb: "IFCCOLOURRGB",
  IfcCurveStyle: "IFCCURVESTYLE",
  IfcCurveStyleFont: "IFCCURVESTYLEFONT",
  IfcCurveStyleFontPattern: "IFCCURVESTYLEFONTPATTERN",
  IfcDraughtingPreDefinedCurveFont: "IFCDRAUGHTINGPREDEFINEDCURVEFONT",
  IfcFillAreaStyle: "IFCFILLAREASTYLE",
  IfcFillAreaStyleHatching: "IFCFILLAREASTYLEHATCHING",
  IfcMaterialDefinitionRepresentation: "IFCMATERIALDEFINITIONREPRESENTATION",
  IfcRepresentationMap: "IFCREPRESENTATIONMAP",
  IfcPresentationLayerAssignment: "IFCPRESENTATIONLAYERASSIGNMENT",
  IfcPresentationStyleAssignment: "IFCPRESENTATIONSTYLEASSIGNMENT",
  IfcStyledItem: "IFCSTYLEDITEM",
  IfcStyledRepresentation: "IFCSTYLEDREPRESENTATION",
  IfcSurfaceStyle: "IFCSURFACESTYLE",
  IfcSurfaceStyleRendering: "IFCSURFACESTYLERENDERING",
  IfcSurfaceStyleShading: "IFCSURFACESTYLESHADING",
  IfcTextLiteralWithExtent: "IFCTEXTLITERALWITHEXTENT",
  IfcTextStyle: "IFCTEXTSTYLE",
  IfcTextStyleFontModel: "IFCTEXTSTYLEFONTMODEL",
  IfcTextStyleForDefinedFont: "IFCTEXTSTYLEFORDEFINEDFONT",
  //Project
  IfcActor: "IFCACTOR",
  //Properties
  IfcAirTerminalType: "IFCAIRTERMINALTYPE",
  IfcBuildingElementProxyType: "IFCBUILDINGELEMENTPROXYTYPE",
  IfcBeamType: "IFCBEAMTYPE",
  IfcColumnType: "IFCCOLUMNTYPE",
  IfcCoveringType: "IFCCOVERINGTYPE",
  IfcCurtainWallType: "IFCCURTAINWALLTYPE",
  IfcFurnitureType: "IFCFURNITURETYPE",
  IfcDistributionElementType: "IFCDISTRIBUTIONELEMENTTYPE",
  IfcDoorType: "IFCDOORTYPE",
  IfcDoorLiningProperties: "IFCDOORLININGPROPERTIES",
  IfcDoorPanelProperties: "IFCDOORPANELPROPERTIES",
  IfcDoorStyle: "IFCDOORSTYLE",
  IfcDuctSegmentType: "IFCDUCTSEGMENTTYPE",
  IfcLightFixtureType: "IFCLIGHTFIXTURETYPE",
  IfcMemberType: "IFCMEMBERTYPE",
  IfcPipeSegmentType: "IFCPIPESEGMENTTYPE",
  IfcPlateType: "IFCPLATETYPE",
  IfcPropertySet: "IFCPROPERTYSET",
  IfcPropertyEnumeratedValue: "IFCPROPERTYENUMERATEDVALUE",
  IfcPropertySingleValue: "IFCPROPERTYSINGLEVALUE",
  IfcRailingType: "IFCRAILINGTYPE",
  IfcSanitaryTerminalType: "IFCSANITARYTERMINALTYPE",
  IfcSpaceType: "IFCSPACETYPE",
  IfcStairFlightType: "IFCSTAIRFLIGHTTYPE",
  IfcSystemFurnitureElementType: "IFCSYSTEMFURNITUREELEMENTTYPE",
  IfcWallType: "IFCWALLTYPE",
  IfcWindowStyle: "IFCWINDOWSTYLE",
  IfcSlabType: "IFCSLABTYPE",
  IfcWindowLiningProperties: "IFCWINDOWLININGPROPERTIES",
  //Quantities
  IfcElementQuantity: "IFCELEMENTQUANTITY",
  IfcQuantityArea: "IFCQUANTITYAREA",
  IfcQuantityLength: "IFCQUANTITYLENGTH",
  IfcQuantityVolume: "IFCQUANTITYVOLUME",
  // Relationships
  IfcRelAggregates: "IFCRELAGGREGATES",
  IfcRelAssignsToActor: "IFCRELASSIGNSTOACTOR",
  IfcRelAssignsToGroup: "IFCRELASSIGNSTOGROUP",
  IfcRelAssociatesClassification: "IFCRELASSOCIATESCLASSIFICATION",
  IfcRelAssociatesDocument: "IFCRELASSOCIATESDOCUMENT",
  IfcRelAssociatesMaterial: "IFCRELASSOCIATESMATERIAL",
  IfcRelConnectsPathElements: "IFCRELCONNECTSPATHELEMENTS",
  IfcRelConnectsPortToElement: "IFCRELCONNECTSPORTTOELEMENT",
  IfcRelConnectsWithRealizingElements: "IFCRELCONNECTSWITHREALIZINGELEMENTS",
  IfcRelContainedInSpatialStructure: "IFCRELCONTAINEDINSPATIALSTRUCTURE",
  IfcRelDefinesByProperties: "IFCRELDEFINESBYPROPERTIES",
  IfcRelDefinesByType: "IFCRELDEFINESBYTYPE",
  IfcRelFillsElement: "IFCRELFILLSELEMENT",
  IfcGroup: "IFCGROUP",
  IfcRelSpaceBoundary: "IFCRELSPACEBOUNDARY",
  IfcRelServicesBuildings: "IFCRELSERVICESBUILDINGS",
  IfcRelVoidsElement: "IFCRELVOIDSELEMENT",
  //Spatial structure elements
  IfcBuilding: "IFCBUILDING",
  IfcBuildingStorey: "IFCBUILDINGSTOREY",
  IfcProject: "IFCPROJECT",
  IfcSite: "IFCSITE",
  IfcSpace: "IFCSPACE",
  //Systems
  IfcDistributionPort: "IFCDISTRIBUTIONPORT",
  IfcSystem: "IFCSYSTEM",
  //Units
  IfcConversionBasedUnit: "IFCCONVERSIONBASEDUNIT",
  IfcDerivedUnit: "IFCDERIVEDUNIT",
  IfcDerivedUnitElement: "IFCDERIVEDUNITELEMENT",
  IfcDimensionalExponents: "IFCDIMENSIONALEXPONENTS",
  IfcMeasureWithUnit: "IFCMEASUREWITHUNIT",
  IfcSIUnit: "IFCSIUNIT",
  IfcUnitAssignment: "IFCUNITASSIGNMENT",
};

function getName(ifcType) {
  return Object.keys(ifcTypes).find((key) => ifcTypes[key] === ifcType);
}

export { ifcTypes, getName };
